
5_Blink_4_leds.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000014d6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000014d6  0000154a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000008f4  00000000  00000000  00001554  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000006f7  00000000  00000000  00001e48  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  0000253f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  0000267f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000027ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00004438  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00005323  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  000060d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00006230  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  000064bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00006c8b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 ed       	ldi	r30, 0xD6	; 214
      68:	f4 e1       	ldi	r31, 0x14	; 20
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 9b 05 	call	0xb36	; 0xb36 <main>
      7a:	0c 94 69 0a 	jmp	0x14d2	; 0x14d2 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 32 0a 	jmp	0x1464	; 0x1464 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 4e 0a 	jmp	0x149c	; 0x149c <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 3e 0a 	jmp	0x147c	; 0x147c <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 5a 0a 	jmp	0x14b4	; 0x14b4 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 3e 0a 	jmp	0x147c	; 0x147c <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 5a 0a 	jmp	0x14b4	; 0x14b4 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 32 0a 	jmp	0x1464	; 0x1464 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 4e 0a 	jmp	0x149c	; 0x149c <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 3e 0a 	jmp	0x147c	; 0x147c <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 5a 0a 	jmp	0x14b4	; 0x14b4 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 3e 0a 	jmp	0x147c	; 0x147c <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 5a 0a 	jmp	0x14b4	; 0x14b4 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 3e 0a 	jmp	0x147c	; 0x147c <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 5a 0a 	jmp	0x14b4	; 0x14b4 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 42 0a 	jmp	0x1484	; 0x1484 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 5e 0a 	jmp	0x14bc	; 0x14bc <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <main>:
// Declared Functions
// Global variables (Declaration and Initialization)
// Enum

void main(void)
{
     b36:	0f 93       	push	r16
     b38:	1f 93       	push	r17
     b3a:	df 93       	push	r29
     b3c:	cf 93       	push	r28
     b3e:	cd b7       	in	r28, 0x3d	; 61
     b40:	de b7       	in	r29, 0x3e	; 62
     b42:	c0 57       	subi	r28, 0x70	; 112
     b44:	d0 40       	sbci	r29, 0x00	; 0
     b46:	0f b6       	in	r0, 0x3f	; 63
     b48:	f8 94       	cli
     b4a:	de bf       	out	0x3e, r29	; 62
     b4c:	0f be       	out	0x3f, r0	; 63
     b4e:	cd bf       	out	0x3d, r28	; 61
	// Declaration and Initialization (executed once)
	DDRC = 0b00001111; // configure C0, C1, C2, C3 as output
     b50:	e4 e3       	ldi	r30, 0x34	; 52
     b52:	f0 e0       	ldi	r31, 0x00	; 0
     b54:	8f e0       	ldi	r24, 0x0F	; 15
     b56:	80 83       	st	Z, r24
	PORTC = 0b00000000; // output zero on Port C
     b58:	e5 e3       	ldi	r30, 0x35	; 53
     b5a:	f0 e0       	ldi	r31, 0x00	; 0
     b5c:	10 82       	st	Z, r1
	while(1)
	{
		// Write your instructions here.

		// blink led 1 C0
		PORTC = 0b00000001; // output 1 on pin C0
     b5e:	e5 e3       	ldi	r30, 0x35	; 53
     b60:	f0 e0       	ldi	r31, 0x00	; 0
     b62:	81 e0       	ldi	r24, 0x01	; 1
     b64:	80 83       	st	Z, r24
     b66:	fe 01       	movw	r30, r28
     b68:	e3 59       	subi	r30, 0x93	; 147
     b6a:	ff 4f       	sbci	r31, 0xFF	; 255
     b6c:	80 e0       	ldi	r24, 0x00	; 0
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	aa ef       	ldi	r26, 0xFA	; 250
     b72:	b3 e4       	ldi	r27, 0x43	; 67
     b74:	80 83       	st	Z, r24
     b76:	91 83       	std	Z+1, r25	; 0x01
     b78:	a2 83       	std	Z+2, r26	; 0x02
     b7a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b7c:	8e 01       	movw	r16, r28
     b7e:	07 59       	subi	r16, 0x97	; 151
     b80:	1f 4f       	sbci	r17, 0xFF	; 255
     b82:	fe 01       	movw	r30, r28
     b84:	e3 59       	subi	r30, 0x93	; 147
     b86:	ff 4f       	sbci	r31, 0xFF	; 255
     b88:	60 81       	ld	r22, Z
     b8a:	71 81       	ldd	r23, Z+1	; 0x01
     b8c:	82 81       	ldd	r24, Z+2	; 0x02
     b8e:	93 81       	ldd	r25, Z+3	; 0x03
     b90:	20 e0       	ldi	r18, 0x00	; 0
     b92:	30 e0       	ldi	r19, 0x00	; 0
     b94:	4a ef       	ldi	r20, 0xFA	; 250
     b96:	54 e4       	ldi	r21, 0x44	; 68
     b98:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     b9c:	dc 01       	movw	r26, r24
     b9e:	cb 01       	movw	r24, r22
     ba0:	f8 01       	movw	r30, r16
     ba2:	80 83       	st	Z, r24
     ba4:	91 83       	std	Z+1, r25	; 0x01
     ba6:	a2 83       	std	Z+2, r26	; 0x02
     ba8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     baa:	fe 01       	movw	r30, r28
     bac:	e7 59       	subi	r30, 0x97	; 151
     bae:	ff 4f       	sbci	r31, 0xFF	; 255
     bb0:	60 81       	ld	r22, Z
     bb2:	71 81       	ldd	r23, Z+1	; 0x01
     bb4:	82 81       	ldd	r24, Z+2	; 0x02
     bb6:	93 81       	ldd	r25, Z+3	; 0x03
     bb8:	20 e0       	ldi	r18, 0x00	; 0
     bba:	30 e0       	ldi	r19, 0x00	; 0
     bbc:	40 e8       	ldi	r20, 0x80	; 128
     bbe:	5f e3       	ldi	r21, 0x3F	; 63
     bc0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     bc4:	88 23       	and	r24, r24
     bc6:	44 f4       	brge	.+16     	; 0xbd8 <main+0xa2>
		__ticks = 1;
     bc8:	fe 01       	movw	r30, r28
     bca:	e9 59       	subi	r30, 0x99	; 153
     bcc:	ff 4f       	sbci	r31, 0xFF	; 255
     bce:	81 e0       	ldi	r24, 0x01	; 1
     bd0:	90 e0       	ldi	r25, 0x00	; 0
     bd2:	91 83       	std	Z+1, r25	; 0x01
     bd4:	80 83       	st	Z, r24
     bd6:	64 c0       	rjmp	.+200    	; 0xca0 <main+0x16a>
	else if (__tmp > 65535)
     bd8:	fe 01       	movw	r30, r28
     bda:	e7 59       	subi	r30, 0x97	; 151
     bdc:	ff 4f       	sbci	r31, 0xFF	; 255
     bde:	60 81       	ld	r22, Z
     be0:	71 81       	ldd	r23, Z+1	; 0x01
     be2:	82 81       	ldd	r24, Z+2	; 0x02
     be4:	93 81       	ldd	r25, Z+3	; 0x03
     be6:	20 e0       	ldi	r18, 0x00	; 0
     be8:	3f ef       	ldi	r19, 0xFF	; 255
     bea:	4f e7       	ldi	r20, 0x7F	; 127
     bec:	57 e4       	ldi	r21, 0x47	; 71
     bee:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     bf2:	18 16       	cp	r1, r24
     bf4:	0c f0       	brlt	.+2      	; 0xbf8 <main+0xc2>
     bf6:	43 c0       	rjmp	.+134    	; 0xc7e <main+0x148>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bf8:	fe 01       	movw	r30, r28
     bfa:	e3 59       	subi	r30, 0x93	; 147
     bfc:	ff 4f       	sbci	r31, 0xFF	; 255
     bfe:	60 81       	ld	r22, Z
     c00:	71 81       	ldd	r23, Z+1	; 0x01
     c02:	82 81       	ldd	r24, Z+2	; 0x02
     c04:	93 81       	ldd	r25, Z+3	; 0x03
     c06:	20 e0       	ldi	r18, 0x00	; 0
     c08:	30 e0       	ldi	r19, 0x00	; 0
     c0a:	40 e2       	ldi	r20, 0x20	; 32
     c0c:	51 e4       	ldi	r21, 0x41	; 65
     c0e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     c12:	dc 01       	movw	r26, r24
     c14:	cb 01       	movw	r24, r22
     c16:	8e 01       	movw	r16, r28
     c18:	09 59       	subi	r16, 0x99	; 153
     c1a:	1f 4f       	sbci	r17, 0xFF	; 255
     c1c:	bc 01       	movw	r22, r24
     c1e:	cd 01       	movw	r24, r26
     c20:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     c24:	dc 01       	movw	r26, r24
     c26:	cb 01       	movw	r24, r22
     c28:	f8 01       	movw	r30, r16
     c2a:	91 83       	std	Z+1, r25	; 0x01
     c2c:	80 83       	st	Z, r24
     c2e:	1f c0       	rjmp	.+62     	; 0xc6e <main+0x138>
     c30:	fe 01       	movw	r30, r28
     c32:	eb 59       	subi	r30, 0x9B	; 155
     c34:	ff 4f       	sbci	r31, 0xFF	; 255
     c36:	88 ec       	ldi	r24, 0xC8	; 200
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	91 83       	std	Z+1, r25	; 0x01
     c3c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c3e:	fe 01       	movw	r30, r28
     c40:	eb 59       	subi	r30, 0x9B	; 155
     c42:	ff 4f       	sbci	r31, 0xFF	; 255
     c44:	80 81       	ld	r24, Z
     c46:	91 81       	ldd	r25, Z+1	; 0x01
     c48:	01 97       	sbiw	r24, 0x01	; 1
     c4a:	f1 f7       	brne	.-4      	; 0xc48 <main+0x112>
     c4c:	fe 01       	movw	r30, r28
     c4e:	eb 59       	subi	r30, 0x9B	; 155
     c50:	ff 4f       	sbci	r31, 0xFF	; 255
     c52:	91 83       	std	Z+1, r25	; 0x01
     c54:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c56:	de 01       	movw	r26, r28
     c58:	a9 59       	subi	r26, 0x99	; 153
     c5a:	bf 4f       	sbci	r27, 0xFF	; 255
     c5c:	fe 01       	movw	r30, r28
     c5e:	e9 59       	subi	r30, 0x99	; 153
     c60:	ff 4f       	sbci	r31, 0xFF	; 255
     c62:	80 81       	ld	r24, Z
     c64:	91 81       	ldd	r25, Z+1	; 0x01
     c66:	01 97       	sbiw	r24, 0x01	; 1
     c68:	11 96       	adiw	r26, 0x01	; 1
     c6a:	9c 93       	st	X, r25
     c6c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c6e:	fe 01       	movw	r30, r28
     c70:	e9 59       	subi	r30, 0x99	; 153
     c72:	ff 4f       	sbci	r31, 0xFF	; 255
     c74:	80 81       	ld	r24, Z
     c76:	91 81       	ldd	r25, Z+1	; 0x01
     c78:	00 97       	sbiw	r24, 0x00	; 0
     c7a:	d1 f6       	brne	.-76     	; 0xc30 <main+0xfa>
     c7c:	27 c0       	rjmp	.+78     	; 0xccc <main+0x196>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c7e:	8e 01       	movw	r16, r28
     c80:	09 59       	subi	r16, 0x99	; 153
     c82:	1f 4f       	sbci	r17, 0xFF	; 255
     c84:	fe 01       	movw	r30, r28
     c86:	e7 59       	subi	r30, 0x97	; 151
     c88:	ff 4f       	sbci	r31, 0xFF	; 255
     c8a:	60 81       	ld	r22, Z
     c8c:	71 81       	ldd	r23, Z+1	; 0x01
     c8e:	82 81       	ldd	r24, Z+2	; 0x02
     c90:	93 81       	ldd	r25, Z+3	; 0x03
     c92:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     c96:	dc 01       	movw	r26, r24
     c98:	cb 01       	movw	r24, r22
     c9a:	f8 01       	movw	r30, r16
     c9c:	91 83       	std	Z+1, r25	; 0x01
     c9e:	80 83       	st	Z, r24
     ca0:	de 01       	movw	r26, r28
     ca2:	ad 59       	subi	r26, 0x9D	; 157
     ca4:	bf 4f       	sbci	r27, 0xFF	; 255
     ca6:	fe 01       	movw	r30, r28
     ca8:	e9 59       	subi	r30, 0x99	; 153
     caa:	ff 4f       	sbci	r31, 0xFF	; 255
     cac:	80 81       	ld	r24, Z
     cae:	91 81       	ldd	r25, Z+1	; 0x01
     cb0:	8d 93       	st	X+, r24
     cb2:	9c 93       	st	X, r25
     cb4:	fe 01       	movw	r30, r28
     cb6:	ed 59       	subi	r30, 0x9D	; 157
     cb8:	ff 4f       	sbci	r31, 0xFF	; 255
     cba:	80 81       	ld	r24, Z
     cbc:	91 81       	ldd	r25, Z+1	; 0x01
     cbe:	01 97       	sbiw	r24, 0x01	; 1
     cc0:	f1 f7       	brne	.-4      	; 0xcbe <main+0x188>
     cc2:	fe 01       	movw	r30, r28
     cc4:	ed 59       	subi	r30, 0x9D	; 157
     cc6:	ff 4f       	sbci	r31, 0xFF	; 255
     cc8:	91 83       	std	Z+1, r25	; 0x01
     cca:	80 83       	st	Z, r24
		_delay_ms(delay_ms); // pause for delay_ms
		PORTC = 0b00000000; // output 0 on pin C0
     ccc:	e5 e3       	ldi	r30, 0x35	; 53
     cce:	f0 e0       	ldi	r31, 0x00	; 0
     cd0:	10 82       	st	Z, r1
     cd2:	fe 01       	movw	r30, r28
     cd4:	e1 5a       	subi	r30, 0xA1	; 161
     cd6:	ff 4f       	sbci	r31, 0xFF	; 255
     cd8:	80 e0       	ldi	r24, 0x00	; 0
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	aa ef       	ldi	r26, 0xFA	; 250
     cde:	b3 e4       	ldi	r27, 0x43	; 67
     ce0:	80 83       	st	Z, r24
     ce2:	91 83       	std	Z+1, r25	; 0x01
     ce4:	a2 83       	std	Z+2, r26	; 0x02
     ce6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ce8:	8e 01       	movw	r16, r28
     cea:	05 5a       	subi	r16, 0xA5	; 165
     cec:	1f 4f       	sbci	r17, 0xFF	; 255
     cee:	fe 01       	movw	r30, r28
     cf0:	e1 5a       	subi	r30, 0xA1	; 161
     cf2:	ff 4f       	sbci	r31, 0xFF	; 255
     cf4:	60 81       	ld	r22, Z
     cf6:	71 81       	ldd	r23, Z+1	; 0x01
     cf8:	82 81       	ldd	r24, Z+2	; 0x02
     cfa:	93 81       	ldd	r25, Z+3	; 0x03
     cfc:	20 e0       	ldi	r18, 0x00	; 0
     cfe:	30 e0       	ldi	r19, 0x00	; 0
     d00:	4a ef       	ldi	r20, 0xFA	; 250
     d02:	54 e4       	ldi	r21, 0x44	; 68
     d04:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d08:	dc 01       	movw	r26, r24
     d0a:	cb 01       	movw	r24, r22
     d0c:	f8 01       	movw	r30, r16
     d0e:	80 83       	st	Z, r24
     d10:	91 83       	std	Z+1, r25	; 0x01
     d12:	a2 83       	std	Z+2, r26	; 0x02
     d14:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d16:	fe 01       	movw	r30, r28
     d18:	e5 5a       	subi	r30, 0xA5	; 165
     d1a:	ff 4f       	sbci	r31, 0xFF	; 255
     d1c:	60 81       	ld	r22, Z
     d1e:	71 81       	ldd	r23, Z+1	; 0x01
     d20:	82 81       	ldd	r24, Z+2	; 0x02
     d22:	93 81       	ldd	r25, Z+3	; 0x03
     d24:	20 e0       	ldi	r18, 0x00	; 0
     d26:	30 e0       	ldi	r19, 0x00	; 0
     d28:	40 e8       	ldi	r20, 0x80	; 128
     d2a:	5f e3       	ldi	r21, 0x3F	; 63
     d2c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     d30:	88 23       	and	r24, r24
     d32:	44 f4       	brge	.+16     	; 0xd44 <main+0x20e>
		__ticks = 1;
     d34:	fe 01       	movw	r30, r28
     d36:	e7 5a       	subi	r30, 0xA7	; 167
     d38:	ff 4f       	sbci	r31, 0xFF	; 255
     d3a:	81 e0       	ldi	r24, 0x01	; 1
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	91 83       	std	Z+1, r25	; 0x01
     d40:	80 83       	st	Z, r24
     d42:	64 c0       	rjmp	.+200    	; 0xe0c <main+0x2d6>
	else if (__tmp > 65535)
     d44:	fe 01       	movw	r30, r28
     d46:	e5 5a       	subi	r30, 0xA5	; 165
     d48:	ff 4f       	sbci	r31, 0xFF	; 255
     d4a:	60 81       	ld	r22, Z
     d4c:	71 81       	ldd	r23, Z+1	; 0x01
     d4e:	82 81       	ldd	r24, Z+2	; 0x02
     d50:	93 81       	ldd	r25, Z+3	; 0x03
     d52:	20 e0       	ldi	r18, 0x00	; 0
     d54:	3f ef       	ldi	r19, 0xFF	; 255
     d56:	4f e7       	ldi	r20, 0x7F	; 127
     d58:	57 e4       	ldi	r21, 0x47	; 71
     d5a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     d5e:	18 16       	cp	r1, r24
     d60:	0c f0       	brlt	.+2      	; 0xd64 <main+0x22e>
     d62:	43 c0       	rjmp	.+134    	; 0xdea <main+0x2b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d64:	fe 01       	movw	r30, r28
     d66:	e1 5a       	subi	r30, 0xA1	; 161
     d68:	ff 4f       	sbci	r31, 0xFF	; 255
     d6a:	60 81       	ld	r22, Z
     d6c:	71 81       	ldd	r23, Z+1	; 0x01
     d6e:	82 81       	ldd	r24, Z+2	; 0x02
     d70:	93 81       	ldd	r25, Z+3	; 0x03
     d72:	20 e0       	ldi	r18, 0x00	; 0
     d74:	30 e0       	ldi	r19, 0x00	; 0
     d76:	40 e2       	ldi	r20, 0x20	; 32
     d78:	51 e4       	ldi	r21, 0x41	; 65
     d7a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d7e:	dc 01       	movw	r26, r24
     d80:	cb 01       	movw	r24, r22
     d82:	8e 01       	movw	r16, r28
     d84:	07 5a       	subi	r16, 0xA7	; 167
     d86:	1f 4f       	sbci	r17, 0xFF	; 255
     d88:	bc 01       	movw	r22, r24
     d8a:	cd 01       	movw	r24, r26
     d8c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     d90:	dc 01       	movw	r26, r24
     d92:	cb 01       	movw	r24, r22
     d94:	f8 01       	movw	r30, r16
     d96:	91 83       	std	Z+1, r25	; 0x01
     d98:	80 83       	st	Z, r24
     d9a:	1f c0       	rjmp	.+62     	; 0xdda <main+0x2a4>
     d9c:	fe 01       	movw	r30, r28
     d9e:	e9 5a       	subi	r30, 0xA9	; 169
     da0:	ff 4f       	sbci	r31, 0xFF	; 255
     da2:	88 ec       	ldi	r24, 0xC8	; 200
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	91 83       	std	Z+1, r25	; 0x01
     da8:	80 83       	st	Z, r24
     daa:	fe 01       	movw	r30, r28
     dac:	e9 5a       	subi	r30, 0xA9	; 169
     dae:	ff 4f       	sbci	r31, 0xFF	; 255
     db0:	80 81       	ld	r24, Z
     db2:	91 81       	ldd	r25, Z+1	; 0x01
     db4:	01 97       	sbiw	r24, 0x01	; 1
     db6:	f1 f7       	brne	.-4      	; 0xdb4 <main+0x27e>
     db8:	fe 01       	movw	r30, r28
     dba:	e9 5a       	subi	r30, 0xA9	; 169
     dbc:	ff 4f       	sbci	r31, 0xFF	; 255
     dbe:	91 83       	std	Z+1, r25	; 0x01
     dc0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     dc2:	de 01       	movw	r26, r28
     dc4:	a7 5a       	subi	r26, 0xA7	; 167
     dc6:	bf 4f       	sbci	r27, 0xFF	; 255
     dc8:	fe 01       	movw	r30, r28
     dca:	e7 5a       	subi	r30, 0xA7	; 167
     dcc:	ff 4f       	sbci	r31, 0xFF	; 255
     dce:	80 81       	ld	r24, Z
     dd0:	91 81       	ldd	r25, Z+1	; 0x01
     dd2:	01 97       	sbiw	r24, 0x01	; 1
     dd4:	11 96       	adiw	r26, 0x01	; 1
     dd6:	9c 93       	st	X, r25
     dd8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     dda:	fe 01       	movw	r30, r28
     ddc:	e7 5a       	subi	r30, 0xA7	; 167
     dde:	ff 4f       	sbci	r31, 0xFF	; 255
     de0:	80 81       	ld	r24, Z
     de2:	91 81       	ldd	r25, Z+1	; 0x01
     de4:	00 97       	sbiw	r24, 0x00	; 0
     de6:	d1 f6       	brne	.-76     	; 0xd9c <main+0x266>
     de8:	27 c0       	rjmp	.+78     	; 0xe38 <main+0x302>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     dea:	8e 01       	movw	r16, r28
     dec:	07 5a       	subi	r16, 0xA7	; 167
     dee:	1f 4f       	sbci	r17, 0xFF	; 255
     df0:	fe 01       	movw	r30, r28
     df2:	e5 5a       	subi	r30, 0xA5	; 165
     df4:	ff 4f       	sbci	r31, 0xFF	; 255
     df6:	60 81       	ld	r22, Z
     df8:	71 81       	ldd	r23, Z+1	; 0x01
     dfa:	82 81       	ldd	r24, Z+2	; 0x02
     dfc:	93 81       	ldd	r25, Z+3	; 0x03
     dfe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     e02:	dc 01       	movw	r26, r24
     e04:	cb 01       	movw	r24, r22
     e06:	f8 01       	movw	r30, r16
     e08:	91 83       	std	Z+1, r25	; 0x01
     e0a:	80 83       	st	Z, r24
     e0c:	de 01       	movw	r26, r28
     e0e:	ab 5a       	subi	r26, 0xAB	; 171
     e10:	bf 4f       	sbci	r27, 0xFF	; 255
     e12:	fe 01       	movw	r30, r28
     e14:	e7 5a       	subi	r30, 0xA7	; 167
     e16:	ff 4f       	sbci	r31, 0xFF	; 255
     e18:	80 81       	ld	r24, Z
     e1a:	91 81       	ldd	r25, Z+1	; 0x01
     e1c:	8d 93       	st	X+, r24
     e1e:	9c 93       	st	X, r25
     e20:	fe 01       	movw	r30, r28
     e22:	eb 5a       	subi	r30, 0xAB	; 171
     e24:	ff 4f       	sbci	r31, 0xFF	; 255
     e26:	80 81       	ld	r24, Z
     e28:	91 81       	ldd	r25, Z+1	; 0x01
     e2a:	01 97       	sbiw	r24, 0x01	; 1
     e2c:	f1 f7       	brne	.-4      	; 0xe2a <main+0x2f4>
     e2e:	fe 01       	movw	r30, r28
     e30:	eb 5a       	subi	r30, 0xAB	; 171
     e32:	ff 4f       	sbci	r31, 0xFF	; 255
     e34:	91 83       	std	Z+1, r25	; 0x01
     e36:	80 83       	st	Z, r24
		_delay_ms(delay_ms); // pause for delay_ms

		// blink led 2 C1
		PORTC = 0b00000010; // output 1 on pin C1
     e38:	e5 e3       	ldi	r30, 0x35	; 53
     e3a:	f0 e0       	ldi	r31, 0x00	; 0
     e3c:	82 e0       	ldi	r24, 0x02	; 2
     e3e:	80 83       	st	Z, r24
     e40:	fe 01       	movw	r30, r28
     e42:	ef 5a       	subi	r30, 0xAF	; 175
     e44:	ff 4f       	sbci	r31, 0xFF	; 255
     e46:	80 e0       	ldi	r24, 0x00	; 0
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	aa ef       	ldi	r26, 0xFA	; 250
     e4c:	b3 e4       	ldi	r27, 0x43	; 67
     e4e:	80 83       	st	Z, r24
     e50:	91 83       	std	Z+1, r25	; 0x01
     e52:	a2 83       	std	Z+2, r26	; 0x02
     e54:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e56:	8e 01       	movw	r16, r28
     e58:	03 5b       	subi	r16, 0xB3	; 179
     e5a:	1f 4f       	sbci	r17, 0xFF	; 255
     e5c:	fe 01       	movw	r30, r28
     e5e:	ef 5a       	subi	r30, 0xAF	; 175
     e60:	ff 4f       	sbci	r31, 0xFF	; 255
     e62:	60 81       	ld	r22, Z
     e64:	71 81       	ldd	r23, Z+1	; 0x01
     e66:	82 81       	ldd	r24, Z+2	; 0x02
     e68:	93 81       	ldd	r25, Z+3	; 0x03
     e6a:	20 e0       	ldi	r18, 0x00	; 0
     e6c:	30 e0       	ldi	r19, 0x00	; 0
     e6e:	4a ef       	ldi	r20, 0xFA	; 250
     e70:	54 e4       	ldi	r21, 0x44	; 68
     e72:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e76:	dc 01       	movw	r26, r24
     e78:	cb 01       	movw	r24, r22
     e7a:	f8 01       	movw	r30, r16
     e7c:	80 83       	st	Z, r24
     e7e:	91 83       	std	Z+1, r25	; 0x01
     e80:	a2 83       	std	Z+2, r26	; 0x02
     e82:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e84:	fe 01       	movw	r30, r28
     e86:	e3 5b       	subi	r30, 0xB3	; 179
     e88:	ff 4f       	sbci	r31, 0xFF	; 255
     e8a:	60 81       	ld	r22, Z
     e8c:	71 81       	ldd	r23, Z+1	; 0x01
     e8e:	82 81       	ldd	r24, Z+2	; 0x02
     e90:	93 81       	ldd	r25, Z+3	; 0x03
     e92:	20 e0       	ldi	r18, 0x00	; 0
     e94:	30 e0       	ldi	r19, 0x00	; 0
     e96:	40 e8       	ldi	r20, 0x80	; 128
     e98:	5f e3       	ldi	r21, 0x3F	; 63
     e9a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     e9e:	88 23       	and	r24, r24
     ea0:	44 f4       	brge	.+16     	; 0xeb2 <main+0x37c>
		__ticks = 1;
     ea2:	fe 01       	movw	r30, r28
     ea4:	e5 5b       	subi	r30, 0xB5	; 181
     ea6:	ff 4f       	sbci	r31, 0xFF	; 255
     ea8:	81 e0       	ldi	r24, 0x01	; 1
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	91 83       	std	Z+1, r25	; 0x01
     eae:	80 83       	st	Z, r24
     eb0:	64 c0       	rjmp	.+200    	; 0xf7a <main+0x444>
	else if (__tmp > 65535)
     eb2:	fe 01       	movw	r30, r28
     eb4:	e3 5b       	subi	r30, 0xB3	; 179
     eb6:	ff 4f       	sbci	r31, 0xFF	; 255
     eb8:	60 81       	ld	r22, Z
     eba:	71 81       	ldd	r23, Z+1	; 0x01
     ebc:	82 81       	ldd	r24, Z+2	; 0x02
     ebe:	93 81       	ldd	r25, Z+3	; 0x03
     ec0:	20 e0       	ldi	r18, 0x00	; 0
     ec2:	3f ef       	ldi	r19, 0xFF	; 255
     ec4:	4f e7       	ldi	r20, 0x7F	; 127
     ec6:	57 e4       	ldi	r21, 0x47	; 71
     ec8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     ecc:	18 16       	cp	r1, r24
     ece:	0c f0       	brlt	.+2      	; 0xed2 <main+0x39c>
     ed0:	43 c0       	rjmp	.+134    	; 0xf58 <main+0x422>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ed2:	fe 01       	movw	r30, r28
     ed4:	ef 5a       	subi	r30, 0xAF	; 175
     ed6:	ff 4f       	sbci	r31, 0xFF	; 255
     ed8:	60 81       	ld	r22, Z
     eda:	71 81       	ldd	r23, Z+1	; 0x01
     edc:	82 81       	ldd	r24, Z+2	; 0x02
     ede:	93 81       	ldd	r25, Z+3	; 0x03
     ee0:	20 e0       	ldi	r18, 0x00	; 0
     ee2:	30 e0       	ldi	r19, 0x00	; 0
     ee4:	40 e2       	ldi	r20, 0x20	; 32
     ee6:	51 e4       	ldi	r21, 0x41	; 65
     ee8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     eec:	dc 01       	movw	r26, r24
     eee:	cb 01       	movw	r24, r22
     ef0:	8e 01       	movw	r16, r28
     ef2:	05 5b       	subi	r16, 0xB5	; 181
     ef4:	1f 4f       	sbci	r17, 0xFF	; 255
     ef6:	bc 01       	movw	r22, r24
     ef8:	cd 01       	movw	r24, r26
     efa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     efe:	dc 01       	movw	r26, r24
     f00:	cb 01       	movw	r24, r22
     f02:	f8 01       	movw	r30, r16
     f04:	91 83       	std	Z+1, r25	; 0x01
     f06:	80 83       	st	Z, r24
     f08:	1f c0       	rjmp	.+62     	; 0xf48 <main+0x412>
     f0a:	fe 01       	movw	r30, r28
     f0c:	e7 5b       	subi	r30, 0xB7	; 183
     f0e:	ff 4f       	sbci	r31, 0xFF	; 255
     f10:	88 ec       	ldi	r24, 0xC8	; 200
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	91 83       	std	Z+1, r25	; 0x01
     f16:	80 83       	st	Z, r24
     f18:	fe 01       	movw	r30, r28
     f1a:	e7 5b       	subi	r30, 0xB7	; 183
     f1c:	ff 4f       	sbci	r31, 0xFF	; 255
     f1e:	80 81       	ld	r24, Z
     f20:	91 81       	ldd	r25, Z+1	; 0x01
     f22:	01 97       	sbiw	r24, 0x01	; 1
     f24:	f1 f7       	brne	.-4      	; 0xf22 <main+0x3ec>
     f26:	fe 01       	movw	r30, r28
     f28:	e7 5b       	subi	r30, 0xB7	; 183
     f2a:	ff 4f       	sbci	r31, 0xFF	; 255
     f2c:	91 83       	std	Z+1, r25	; 0x01
     f2e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f30:	de 01       	movw	r26, r28
     f32:	a5 5b       	subi	r26, 0xB5	; 181
     f34:	bf 4f       	sbci	r27, 0xFF	; 255
     f36:	fe 01       	movw	r30, r28
     f38:	e5 5b       	subi	r30, 0xB5	; 181
     f3a:	ff 4f       	sbci	r31, 0xFF	; 255
     f3c:	80 81       	ld	r24, Z
     f3e:	91 81       	ldd	r25, Z+1	; 0x01
     f40:	01 97       	sbiw	r24, 0x01	; 1
     f42:	11 96       	adiw	r26, 0x01	; 1
     f44:	9c 93       	st	X, r25
     f46:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f48:	fe 01       	movw	r30, r28
     f4a:	e5 5b       	subi	r30, 0xB5	; 181
     f4c:	ff 4f       	sbci	r31, 0xFF	; 255
     f4e:	80 81       	ld	r24, Z
     f50:	91 81       	ldd	r25, Z+1	; 0x01
     f52:	00 97       	sbiw	r24, 0x00	; 0
     f54:	d1 f6       	brne	.-76     	; 0xf0a <main+0x3d4>
     f56:	27 c0       	rjmp	.+78     	; 0xfa6 <main+0x470>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f58:	8e 01       	movw	r16, r28
     f5a:	05 5b       	subi	r16, 0xB5	; 181
     f5c:	1f 4f       	sbci	r17, 0xFF	; 255
     f5e:	fe 01       	movw	r30, r28
     f60:	e3 5b       	subi	r30, 0xB3	; 179
     f62:	ff 4f       	sbci	r31, 0xFF	; 255
     f64:	60 81       	ld	r22, Z
     f66:	71 81       	ldd	r23, Z+1	; 0x01
     f68:	82 81       	ldd	r24, Z+2	; 0x02
     f6a:	93 81       	ldd	r25, Z+3	; 0x03
     f6c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f70:	dc 01       	movw	r26, r24
     f72:	cb 01       	movw	r24, r22
     f74:	f8 01       	movw	r30, r16
     f76:	91 83       	std	Z+1, r25	; 0x01
     f78:	80 83       	st	Z, r24
     f7a:	de 01       	movw	r26, r28
     f7c:	a9 5b       	subi	r26, 0xB9	; 185
     f7e:	bf 4f       	sbci	r27, 0xFF	; 255
     f80:	fe 01       	movw	r30, r28
     f82:	e5 5b       	subi	r30, 0xB5	; 181
     f84:	ff 4f       	sbci	r31, 0xFF	; 255
     f86:	80 81       	ld	r24, Z
     f88:	91 81       	ldd	r25, Z+1	; 0x01
     f8a:	8d 93       	st	X+, r24
     f8c:	9c 93       	st	X, r25
     f8e:	fe 01       	movw	r30, r28
     f90:	e9 5b       	subi	r30, 0xB9	; 185
     f92:	ff 4f       	sbci	r31, 0xFF	; 255
     f94:	80 81       	ld	r24, Z
     f96:	91 81       	ldd	r25, Z+1	; 0x01
     f98:	01 97       	sbiw	r24, 0x01	; 1
     f9a:	f1 f7       	brne	.-4      	; 0xf98 <main+0x462>
     f9c:	fe 01       	movw	r30, r28
     f9e:	e9 5b       	subi	r30, 0xB9	; 185
     fa0:	ff 4f       	sbci	r31, 0xFF	; 255
     fa2:	91 83       	std	Z+1, r25	; 0x01
     fa4:	80 83       	st	Z, r24
		_delay_ms(delay_ms); // pause for delay_ms
		PORTC = 0b00000000; // output 0 on pin C1
     fa6:	e5 e3       	ldi	r30, 0x35	; 53
     fa8:	f0 e0       	ldi	r31, 0x00	; 0
     faa:	10 82       	st	Z, r1
     fac:	fe 01       	movw	r30, r28
     fae:	ed 5b       	subi	r30, 0xBD	; 189
     fb0:	ff 4f       	sbci	r31, 0xFF	; 255
     fb2:	80 e0       	ldi	r24, 0x00	; 0
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	aa ef       	ldi	r26, 0xFA	; 250
     fb8:	b3 e4       	ldi	r27, 0x43	; 67
     fba:	80 83       	st	Z, r24
     fbc:	91 83       	std	Z+1, r25	; 0x01
     fbe:	a2 83       	std	Z+2, r26	; 0x02
     fc0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     fc2:	8e 01       	movw	r16, r28
     fc4:	01 5c       	subi	r16, 0xC1	; 193
     fc6:	1f 4f       	sbci	r17, 0xFF	; 255
     fc8:	fe 01       	movw	r30, r28
     fca:	ed 5b       	subi	r30, 0xBD	; 189
     fcc:	ff 4f       	sbci	r31, 0xFF	; 255
     fce:	60 81       	ld	r22, Z
     fd0:	71 81       	ldd	r23, Z+1	; 0x01
     fd2:	82 81       	ldd	r24, Z+2	; 0x02
     fd4:	93 81       	ldd	r25, Z+3	; 0x03
     fd6:	20 e0       	ldi	r18, 0x00	; 0
     fd8:	30 e0       	ldi	r19, 0x00	; 0
     fda:	4a ef       	ldi	r20, 0xFA	; 250
     fdc:	54 e4       	ldi	r21, 0x44	; 68
     fde:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     fe2:	dc 01       	movw	r26, r24
     fe4:	cb 01       	movw	r24, r22
     fe6:	f8 01       	movw	r30, r16
     fe8:	80 83       	st	Z, r24
     fea:	91 83       	std	Z+1, r25	; 0x01
     fec:	a2 83       	std	Z+2, r26	; 0x02
     fee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     ff0:	fe 01       	movw	r30, r28
     ff2:	ff 96       	adiw	r30, 0x3f	; 63
     ff4:	60 81       	ld	r22, Z
     ff6:	71 81       	ldd	r23, Z+1	; 0x01
     ff8:	82 81       	ldd	r24, Z+2	; 0x02
     ffa:	93 81       	ldd	r25, Z+3	; 0x03
     ffc:	20 e0       	ldi	r18, 0x00	; 0
     ffe:	30 e0       	ldi	r19, 0x00	; 0
    1000:	40 e8       	ldi	r20, 0x80	; 128
    1002:	5f e3       	ldi	r21, 0x3F	; 63
    1004:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1008:	88 23       	and	r24, r24
    100a:	2c f4       	brge	.+10     	; 0x1016 <main+0x4e0>
		__ticks = 1;
    100c:	81 e0       	ldi	r24, 0x01	; 1
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	9e af       	std	Y+62, r25	; 0x3e
    1012:	8d af       	std	Y+61, r24	; 0x3d
    1014:	46 c0       	rjmp	.+140    	; 0x10a2 <main+0x56c>
	else if (__tmp > 65535)
    1016:	fe 01       	movw	r30, r28
    1018:	ff 96       	adiw	r30, 0x3f	; 63
    101a:	60 81       	ld	r22, Z
    101c:	71 81       	ldd	r23, Z+1	; 0x01
    101e:	82 81       	ldd	r24, Z+2	; 0x02
    1020:	93 81       	ldd	r25, Z+3	; 0x03
    1022:	20 e0       	ldi	r18, 0x00	; 0
    1024:	3f ef       	ldi	r19, 0xFF	; 255
    1026:	4f e7       	ldi	r20, 0x7F	; 127
    1028:	57 e4       	ldi	r21, 0x47	; 71
    102a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    102e:	18 16       	cp	r1, r24
    1030:	64 f5       	brge	.+88     	; 0x108a <main+0x554>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1032:	fe 01       	movw	r30, r28
    1034:	ed 5b       	subi	r30, 0xBD	; 189
    1036:	ff 4f       	sbci	r31, 0xFF	; 255
    1038:	60 81       	ld	r22, Z
    103a:	71 81       	ldd	r23, Z+1	; 0x01
    103c:	82 81       	ldd	r24, Z+2	; 0x02
    103e:	93 81       	ldd	r25, Z+3	; 0x03
    1040:	20 e0       	ldi	r18, 0x00	; 0
    1042:	30 e0       	ldi	r19, 0x00	; 0
    1044:	40 e2       	ldi	r20, 0x20	; 32
    1046:	51 e4       	ldi	r21, 0x41	; 65
    1048:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    104c:	dc 01       	movw	r26, r24
    104e:	cb 01       	movw	r24, r22
    1050:	bc 01       	movw	r22, r24
    1052:	cd 01       	movw	r24, r26
    1054:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1058:	dc 01       	movw	r26, r24
    105a:	cb 01       	movw	r24, r22
    105c:	9e af       	std	Y+62, r25	; 0x3e
    105e:	8d af       	std	Y+61, r24	; 0x3d
    1060:	0f c0       	rjmp	.+30     	; 0x1080 <main+0x54a>
    1062:	88 ec       	ldi	r24, 0xC8	; 200
    1064:	90 e0       	ldi	r25, 0x00	; 0
    1066:	9c af       	std	Y+60, r25	; 0x3c
    1068:	8b af       	std	Y+59, r24	; 0x3b
    106a:	8b ad       	ldd	r24, Y+59	; 0x3b
    106c:	9c ad       	ldd	r25, Y+60	; 0x3c
    106e:	01 97       	sbiw	r24, 0x01	; 1
    1070:	f1 f7       	brne	.-4      	; 0x106e <main+0x538>
    1072:	9c af       	std	Y+60, r25	; 0x3c
    1074:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1076:	8d ad       	ldd	r24, Y+61	; 0x3d
    1078:	9e ad       	ldd	r25, Y+62	; 0x3e
    107a:	01 97       	sbiw	r24, 0x01	; 1
    107c:	9e af       	std	Y+62, r25	; 0x3e
    107e:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1080:	8d ad       	ldd	r24, Y+61	; 0x3d
    1082:	9e ad       	ldd	r25, Y+62	; 0x3e
    1084:	00 97       	sbiw	r24, 0x00	; 0
    1086:	69 f7       	brne	.-38     	; 0x1062 <main+0x52c>
    1088:	16 c0       	rjmp	.+44     	; 0x10b6 <main+0x580>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    108a:	fe 01       	movw	r30, r28
    108c:	ff 96       	adiw	r30, 0x3f	; 63
    108e:	60 81       	ld	r22, Z
    1090:	71 81       	ldd	r23, Z+1	; 0x01
    1092:	82 81       	ldd	r24, Z+2	; 0x02
    1094:	93 81       	ldd	r25, Z+3	; 0x03
    1096:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    109a:	dc 01       	movw	r26, r24
    109c:	cb 01       	movw	r24, r22
    109e:	9e af       	std	Y+62, r25	; 0x3e
    10a0:	8d af       	std	Y+61, r24	; 0x3d
    10a2:	8d ad       	ldd	r24, Y+61	; 0x3d
    10a4:	9e ad       	ldd	r25, Y+62	; 0x3e
    10a6:	9a af       	std	Y+58, r25	; 0x3a
    10a8:	89 af       	std	Y+57, r24	; 0x39
    10aa:	89 ad       	ldd	r24, Y+57	; 0x39
    10ac:	9a ad       	ldd	r25, Y+58	; 0x3a
    10ae:	01 97       	sbiw	r24, 0x01	; 1
    10b0:	f1 f7       	brne	.-4      	; 0x10ae <main+0x578>
    10b2:	9a af       	std	Y+58, r25	; 0x3a
    10b4:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(delay_ms); // pause for delay_ms

		// blink led 3 C2
		PORTC = 0b00000100; // output 1 on pin C2
    10b6:	e5 e3       	ldi	r30, 0x35	; 53
    10b8:	f0 e0       	ldi	r31, 0x00	; 0
    10ba:	84 e0       	ldi	r24, 0x04	; 4
    10bc:	80 83       	st	Z, r24
    10be:	80 e0       	ldi	r24, 0x00	; 0
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	aa ef       	ldi	r26, 0xFA	; 250
    10c4:	b3 e4       	ldi	r27, 0x43	; 67
    10c6:	8d ab       	std	Y+53, r24	; 0x35
    10c8:	9e ab       	std	Y+54, r25	; 0x36
    10ca:	af ab       	std	Y+55, r26	; 0x37
    10cc:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10ce:	6d a9       	ldd	r22, Y+53	; 0x35
    10d0:	7e a9       	ldd	r23, Y+54	; 0x36
    10d2:	8f a9       	ldd	r24, Y+55	; 0x37
    10d4:	98 ad       	ldd	r25, Y+56	; 0x38
    10d6:	20 e0       	ldi	r18, 0x00	; 0
    10d8:	30 e0       	ldi	r19, 0x00	; 0
    10da:	4a ef       	ldi	r20, 0xFA	; 250
    10dc:	54 e4       	ldi	r21, 0x44	; 68
    10de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    10e2:	dc 01       	movw	r26, r24
    10e4:	cb 01       	movw	r24, r22
    10e6:	89 ab       	std	Y+49, r24	; 0x31
    10e8:	9a ab       	std	Y+50, r25	; 0x32
    10ea:	ab ab       	std	Y+51, r26	; 0x33
    10ec:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    10ee:	69 a9       	ldd	r22, Y+49	; 0x31
    10f0:	7a a9       	ldd	r23, Y+50	; 0x32
    10f2:	8b a9       	ldd	r24, Y+51	; 0x33
    10f4:	9c a9       	ldd	r25, Y+52	; 0x34
    10f6:	20 e0       	ldi	r18, 0x00	; 0
    10f8:	30 e0       	ldi	r19, 0x00	; 0
    10fa:	40 e8       	ldi	r20, 0x80	; 128
    10fc:	5f e3       	ldi	r21, 0x3F	; 63
    10fe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1102:	88 23       	and	r24, r24
    1104:	2c f4       	brge	.+10     	; 0x1110 <main+0x5da>
		__ticks = 1;
    1106:	81 e0       	ldi	r24, 0x01	; 1
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	98 ab       	std	Y+48, r25	; 0x30
    110c:	8f a7       	std	Y+47, r24	; 0x2f
    110e:	3f c0       	rjmp	.+126    	; 0x118e <main+0x658>
	else if (__tmp > 65535)
    1110:	69 a9       	ldd	r22, Y+49	; 0x31
    1112:	7a a9       	ldd	r23, Y+50	; 0x32
    1114:	8b a9       	ldd	r24, Y+51	; 0x33
    1116:	9c a9       	ldd	r25, Y+52	; 0x34
    1118:	20 e0       	ldi	r18, 0x00	; 0
    111a:	3f ef       	ldi	r19, 0xFF	; 255
    111c:	4f e7       	ldi	r20, 0x7F	; 127
    111e:	57 e4       	ldi	r21, 0x47	; 71
    1120:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1124:	18 16       	cp	r1, r24
    1126:	4c f5       	brge	.+82     	; 0x117a <main+0x644>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1128:	6d a9       	ldd	r22, Y+53	; 0x35
    112a:	7e a9       	ldd	r23, Y+54	; 0x36
    112c:	8f a9       	ldd	r24, Y+55	; 0x37
    112e:	98 ad       	ldd	r25, Y+56	; 0x38
    1130:	20 e0       	ldi	r18, 0x00	; 0
    1132:	30 e0       	ldi	r19, 0x00	; 0
    1134:	40 e2       	ldi	r20, 0x20	; 32
    1136:	51 e4       	ldi	r21, 0x41	; 65
    1138:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    113c:	dc 01       	movw	r26, r24
    113e:	cb 01       	movw	r24, r22
    1140:	bc 01       	movw	r22, r24
    1142:	cd 01       	movw	r24, r26
    1144:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1148:	dc 01       	movw	r26, r24
    114a:	cb 01       	movw	r24, r22
    114c:	98 ab       	std	Y+48, r25	; 0x30
    114e:	8f a7       	std	Y+47, r24	; 0x2f
    1150:	0f c0       	rjmp	.+30     	; 0x1170 <main+0x63a>
    1152:	88 ec       	ldi	r24, 0xC8	; 200
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	9e a7       	std	Y+46, r25	; 0x2e
    1158:	8d a7       	std	Y+45, r24	; 0x2d
    115a:	8d a5       	ldd	r24, Y+45	; 0x2d
    115c:	9e a5       	ldd	r25, Y+46	; 0x2e
    115e:	01 97       	sbiw	r24, 0x01	; 1
    1160:	f1 f7       	brne	.-4      	; 0x115e <main+0x628>
    1162:	9e a7       	std	Y+46, r25	; 0x2e
    1164:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1166:	8f a5       	ldd	r24, Y+47	; 0x2f
    1168:	98 a9       	ldd	r25, Y+48	; 0x30
    116a:	01 97       	sbiw	r24, 0x01	; 1
    116c:	98 ab       	std	Y+48, r25	; 0x30
    116e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1170:	8f a5       	ldd	r24, Y+47	; 0x2f
    1172:	98 a9       	ldd	r25, Y+48	; 0x30
    1174:	00 97       	sbiw	r24, 0x00	; 0
    1176:	69 f7       	brne	.-38     	; 0x1152 <main+0x61c>
    1178:	14 c0       	rjmp	.+40     	; 0x11a2 <main+0x66c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    117a:	69 a9       	ldd	r22, Y+49	; 0x31
    117c:	7a a9       	ldd	r23, Y+50	; 0x32
    117e:	8b a9       	ldd	r24, Y+51	; 0x33
    1180:	9c a9       	ldd	r25, Y+52	; 0x34
    1182:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1186:	dc 01       	movw	r26, r24
    1188:	cb 01       	movw	r24, r22
    118a:	98 ab       	std	Y+48, r25	; 0x30
    118c:	8f a7       	std	Y+47, r24	; 0x2f
    118e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1190:	98 a9       	ldd	r25, Y+48	; 0x30
    1192:	9c a7       	std	Y+44, r25	; 0x2c
    1194:	8b a7       	std	Y+43, r24	; 0x2b
    1196:	8b a5       	ldd	r24, Y+43	; 0x2b
    1198:	9c a5       	ldd	r25, Y+44	; 0x2c
    119a:	01 97       	sbiw	r24, 0x01	; 1
    119c:	f1 f7       	brne	.-4      	; 0x119a <main+0x664>
    119e:	9c a7       	std	Y+44, r25	; 0x2c
    11a0:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(delay_ms); // pause for delay_ms
		PORTC = 0b00000000; // output 0 on pin C2
    11a2:	e5 e3       	ldi	r30, 0x35	; 53
    11a4:	f0 e0       	ldi	r31, 0x00	; 0
    11a6:	10 82       	st	Z, r1
    11a8:	80 e0       	ldi	r24, 0x00	; 0
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	aa ef       	ldi	r26, 0xFA	; 250
    11ae:	b3 e4       	ldi	r27, 0x43	; 67
    11b0:	8f a3       	std	Y+39, r24	; 0x27
    11b2:	98 a7       	std	Y+40, r25	; 0x28
    11b4:	a9 a7       	std	Y+41, r26	; 0x29
    11b6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11b8:	6f a1       	ldd	r22, Y+39	; 0x27
    11ba:	78 a5       	ldd	r23, Y+40	; 0x28
    11bc:	89 a5       	ldd	r24, Y+41	; 0x29
    11be:	9a a5       	ldd	r25, Y+42	; 0x2a
    11c0:	20 e0       	ldi	r18, 0x00	; 0
    11c2:	30 e0       	ldi	r19, 0x00	; 0
    11c4:	4a ef       	ldi	r20, 0xFA	; 250
    11c6:	54 e4       	ldi	r21, 0x44	; 68
    11c8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11cc:	dc 01       	movw	r26, r24
    11ce:	cb 01       	movw	r24, r22
    11d0:	8b a3       	std	Y+35, r24	; 0x23
    11d2:	9c a3       	std	Y+36, r25	; 0x24
    11d4:	ad a3       	std	Y+37, r26	; 0x25
    11d6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    11d8:	6b a1       	ldd	r22, Y+35	; 0x23
    11da:	7c a1       	ldd	r23, Y+36	; 0x24
    11dc:	8d a1       	ldd	r24, Y+37	; 0x25
    11de:	9e a1       	ldd	r25, Y+38	; 0x26
    11e0:	20 e0       	ldi	r18, 0x00	; 0
    11e2:	30 e0       	ldi	r19, 0x00	; 0
    11e4:	40 e8       	ldi	r20, 0x80	; 128
    11e6:	5f e3       	ldi	r21, 0x3F	; 63
    11e8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    11ec:	88 23       	and	r24, r24
    11ee:	2c f4       	brge	.+10     	; 0x11fa <main+0x6c4>
		__ticks = 1;
    11f0:	81 e0       	ldi	r24, 0x01	; 1
    11f2:	90 e0       	ldi	r25, 0x00	; 0
    11f4:	9a a3       	std	Y+34, r25	; 0x22
    11f6:	89 a3       	std	Y+33, r24	; 0x21
    11f8:	3f c0       	rjmp	.+126    	; 0x1278 <main+0x742>
	else if (__tmp > 65535)
    11fa:	6b a1       	ldd	r22, Y+35	; 0x23
    11fc:	7c a1       	ldd	r23, Y+36	; 0x24
    11fe:	8d a1       	ldd	r24, Y+37	; 0x25
    1200:	9e a1       	ldd	r25, Y+38	; 0x26
    1202:	20 e0       	ldi	r18, 0x00	; 0
    1204:	3f ef       	ldi	r19, 0xFF	; 255
    1206:	4f e7       	ldi	r20, 0x7F	; 127
    1208:	57 e4       	ldi	r21, 0x47	; 71
    120a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    120e:	18 16       	cp	r1, r24
    1210:	4c f5       	brge	.+82     	; 0x1264 <main+0x72e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1212:	6f a1       	ldd	r22, Y+39	; 0x27
    1214:	78 a5       	ldd	r23, Y+40	; 0x28
    1216:	89 a5       	ldd	r24, Y+41	; 0x29
    1218:	9a a5       	ldd	r25, Y+42	; 0x2a
    121a:	20 e0       	ldi	r18, 0x00	; 0
    121c:	30 e0       	ldi	r19, 0x00	; 0
    121e:	40 e2       	ldi	r20, 0x20	; 32
    1220:	51 e4       	ldi	r21, 0x41	; 65
    1222:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1226:	dc 01       	movw	r26, r24
    1228:	cb 01       	movw	r24, r22
    122a:	bc 01       	movw	r22, r24
    122c:	cd 01       	movw	r24, r26
    122e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1232:	dc 01       	movw	r26, r24
    1234:	cb 01       	movw	r24, r22
    1236:	9a a3       	std	Y+34, r25	; 0x22
    1238:	89 a3       	std	Y+33, r24	; 0x21
    123a:	0f c0       	rjmp	.+30     	; 0x125a <main+0x724>
    123c:	88 ec       	ldi	r24, 0xC8	; 200
    123e:	90 e0       	ldi	r25, 0x00	; 0
    1240:	98 a3       	std	Y+32, r25	; 0x20
    1242:	8f 8f       	std	Y+31, r24	; 0x1f
    1244:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1246:	98 a1       	ldd	r25, Y+32	; 0x20
    1248:	01 97       	sbiw	r24, 0x01	; 1
    124a:	f1 f7       	brne	.-4      	; 0x1248 <main+0x712>
    124c:	98 a3       	std	Y+32, r25	; 0x20
    124e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1250:	89 a1       	ldd	r24, Y+33	; 0x21
    1252:	9a a1       	ldd	r25, Y+34	; 0x22
    1254:	01 97       	sbiw	r24, 0x01	; 1
    1256:	9a a3       	std	Y+34, r25	; 0x22
    1258:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    125a:	89 a1       	ldd	r24, Y+33	; 0x21
    125c:	9a a1       	ldd	r25, Y+34	; 0x22
    125e:	00 97       	sbiw	r24, 0x00	; 0
    1260:	69 f7       	brne	.-38     	; 0x123c <main+0x706>
    1262:	14 c0       	rjmp	.+40     	; 0x128c <main+0x756>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1264:	6b a1       	ldd	r22, Y+35	; 0x23
    1266:	7c a1       	ldd	r23, Y+36	; 0x24
    1268:	8d a1       	ldd	r24, Y+37	; 0x25
    126a:	9e a1       	ldd	r25, Y+38	; 0x26
    126c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1270:	dc 01       	movw	r26, r24
    1272:	cb 01       	movw	r24, r22
    1274:	9a a3       	std	Y+34, r25	; 0x22
    1276:	89 a3       	std	Y+33, r24	; 0x21
    1278:	89 a1       	ldd	r24, Y+33	; 0x21
    127a:	9a a1       	ldd	r25, Y+34	; 0x22
    127c:	9e 8f       	std	Y+30, r25	; 0x1e
    127e:	8d 8f       	std	Y+29, r24	; 0x1d
    1280:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1282:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1284:	01 97       	sbiw	r24, 0x01	; 1
    1286:	f1 f7       	brne	.-4      	; 0x1284 <main+0x74e>
    1288:	9e 8f       	std	Y+30, r25	; 0x1e
    128a:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(delay_ms); // pause for delay_ms

		// blink led 4 C3
		PORTC = 0b00001000; // output 1 on pin C3
    128c:	e5 e3       	ldi	r30, 0x35	; 53
    128e:	f0 e0       	ldi	r31, 0x00	; 0
    1290:	88 e0       	ldi	r24, 0x08	; 8
    1292:	80 83       	st	Z, r24
    1294:	80 e0       	ldi	r24, 0x00	; 0
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	aa ef       	ldi	r26, 0xFA	; 250
    129a:	b3 e4       	ldi	r27, 0x43	; 67
    129c:	89 8f       	std	Y+25, r24	; 0x19
    129e:	9a 8f       	std	Y+26, r25	; 0x1a
    12a0:	ab 8f       	std	Y+27, r26	; 0x1b
    12a2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12a4:	69 8d       	ldd	r22, Y+25	; 0x19
    12a6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    12a8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    12aa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    12ac:	20 e0       	ldi	r18, 0x00	; 0
    12ae:	30 e0       	ldi	r19, 0x00	; 0
    12b0:	4a ef       	ldi	r20, 0xFA	; 250
    12b2:	54 e4       	ldi	r21, 0x44	; 68
    12b4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12b8:	dc 01       	movw	r26, r24
    12ba:	cb 01       	movw	r24, r22
    12bc:	8d 8b       	std	Y+21, r24	; 0x15
    12be:	9e 8b       	std	Y+22, r25	; 0x16
    12c0:	af 8b       	std	Y+23, r26	; 0x17
    12c2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    12c4:	6d 89       	ldd	r22, Y+21	; 0x15
    12c6:	7e 89       	ldd	r23, Y+22	; 0x16
    12c8:	8f 89       	ldd	r24, Y+23	; 0x17
    12ca:	98 8d       	ldd	r25, Y+24	; 0x18
    12cc:	20 e0       	ldi	r18, 0x00	; 0
    12ce:	30 e0       	ldi	r19, 0x00	; 0
    12d0:	40 e8       	ldi	r20, 0x80	; 128
    12d2:	5f e3       	ldi	r21, 0x3F	; 63
    12d4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    12d8:	88 23       	and	r24, r24
    12da:	2c f4       	brge	.+10     	; 0x12e6 <main+0x7b0>
		__ticks = 1;
    12dc:	81 e0       	ldi	r24, 0x01	; 1
    12de:	90 e0       	ldi	r25, 0x00	; 0
    12e0:	9c 8b       	std	Y+20, r25	; 0x14
    12e2:	8b 8b       	std	Y+19, r24	; 0x13
    12e4:	3f c0       	rjmp	.+126    	; 0x1364 <main+0x82e>
	else if (__tmp > 65535)
    12e6:	6d 89       	ldd	r22, Y+21	; 0x15
    12e8:	7e 89       	ldd	r23, Y+22	; 0x16
    12ea:	8f 89       	ldd	r24, Y+23	; 0x17
    12ec:	98 8d       	ldd	r25, Y+24	; 0x18
    12ee:	20 e0       	ldi	r18, 0x00	; 0
    12f0:	3f ef       	ldi	r19, 0xFF	; 255
    12f2:	4f e7       	ldi	r20, 0x7F	; 127
    12f4:	57 e4       	ldi	r21, 0x47	; 71
    12f6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    12fa:	18 16       	cp	r1, r24
    12fc:	4c f5       	brge	.+82     	; 0x1350 <main+0x81a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12fe:	69 8d       	ldd	r22, Y+25	; 0x19
    1300:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1302:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1304:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1306:	20 e0       	ldi	r18, 0x00	; 0
    1308:	30 e0       	ldi	r19, 0x00	; 0
    130a:	40 e2       	ldi	r20, 0x20	; 32
    130c:	51 e4       	ldi	r21, 0x41	; 65
    130e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1312:	dc 01       	movw	r26, r24
    1314:	cb 01       	movw	r24, r22
    1316:	bc 01       	movw	r22, r24
    1318:	cd 01       	movw	r24, r26
    131a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    131e:	dc 01       	movw	r26, r24
    1320:	cb 01       	movw	r24, r22
    1322:	9c 8b       	std	Y+20, r25	; 0x14
    1324:	8b 8b       	std	Y+19, r24	; 0x13
    1326:	0f c0       	rjmp	.+30     	; 0x1346 <main+0x810>
    1328:	88 ec       	ldi	r24, 0xC8	; 200
    132a:	90 e0       	ldi	r25, 0x00	; 0
    132c:	9a 8b       	std	Y+18, r25	; 0x12
    132e:	89 8b       	std	Y+17, r24	; 0x11
    1330:	89 89       	ldd	r24, Y+17	; 0x11
    1332:	9a 89       	ldd	r25, Y+18	; 0x12
    1334:	01 97       	sbiw	r24, 0x01	; 1
    1336:	f1 f7       	brne	.-4      	; 0x1334 <main+0x7fe>
    1338:	9a 8b       	std	Y+18, r25	; 0x12
    133a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    133c:	8b 89       	ldd	r24, Y+19	; 0x13
    133e:	9c 89       	ldd	r25, Y+20	; 0x14
    1340:	01 97       	sbiw	r24, 0x01	; 1
    1342:	9c 8b       	std	Y+20, r25	; 0x14
    1344:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1346:	8b 89       	ldd	r24, Y+19	; 0x13
    1348:	9c 89       	ldd	r25, Y+20	; 0x14
    134a:	00 97       	sbiw	r24, 0x00	; 0
    134c:	69 f7       	brne	.-38     	; 0x1328 <main+0x7f2>
    134e:	14 c0       	rjmp	.+40     	; 0x1378 <main+0x842>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1350:	6d 89       	ldd	r22, Y+21	; 0x15
    1352:	7e 89       	ldd	r23, Y+22	; 0x16
    1354:	8f 89       	ldd	r24, Y+23	; 0x17
    1356:	98 8d       	ldd	r25, Y+24	; 0x18
    1358:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    135c:	dc 01       	movw	r26, r24
    135e:	cb 01       	movw	r24, r22
    1360:	9c 8b       	std	Y+20, r25	; 0x14
    1362:	8b 8b       	std	Y+19, r24	; 0x13
    1364:	8b 89       	ldd	r24, Y+19	; 0x13
    1366:	9c 89       	ldd	r25, Y+20	; 0x14
    1368:	98 8b       	std	Y+16, r25	; 0x10
    136a:	8f 87       	std	Y+15, r24	; 0x0f
    136c:	8f 85       	ldd	r24, Y+15	; 0x0f
    136e:	98 89       	ldd	r25, Y+16	; 0x10
    1370:	01 97       	sbiw	r24, 0x01	; 1
    1372:	f1 f7       	brne	.-4      	; 0x1370 <main+0x83a>
    1374:	98 8b       	std	Y+16, r25	; 0x10
    1376:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(delay_ms); // pause for delay_ms
		PORTC = 0b00000000; // output 0 on pin C3
    1378:	e5 e3       	ldi	r30, 0x35	; 53
    137a:	f0 e0       	ldi	r31, 0x00	; 0
    137c:	10 82       	st	Z, r1
    137e:	80 e0       	ldi	r24, 0x00	; 0
    1380:	90 e0       	ldi	r25, 0x00	; 0
    1382:	aa ef       	ldi	r26, 0xFA	; 250
    1384:	b3 e4       	ldi	r27, 0x43	; 67
    1386:	8b 87       	std	Y+11, r24	; 0x0b
    1388:	9c 87       	std	Y+12, r25	; 0x0c
    138a:	ad 87       	std	Y+13, r26	; 0x0d
    138c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    138e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1390:	7c 85       	ldd	r23, Y+12	; 0x0c
    1392:	8d 85       	ldd	r24, Y+13	; 0x0d
    1394:	9e 85       	ldd	r25, Y+14	; 0x0e
    1396:	20 e0       	ldi	r18, 0x00	; 0
    1398:	30 e0       	ldi	r19, 0x00	; 0
    139a:	4a ef       	ldi	r20, 0xFA	; 250
    139c:	54 e4       	ldi	r21, 0x44	; 68
    139e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13a2:	dc 01       	movw	r26, r24
    13a4:	cb 01       	movw	r24, r22
    13a6:	8f 83       	std	Y+7, r24	; 0x07
    13a8:	98 87       	std	Y+8, r25	; 0x08
    13aa:	a9 87       	std	Y+9, r26	; 0x09
    13ac:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    13ae:	6f 81       	ldd	r22, Y+7	; 0x07
    13b0:	78 85       	ldd	r23, Y+8	; 0x08
    13b2:	89 85       	ldd	r24, Y+9	; 0x09
    13b4:	9a 85       	ldd	r25, Y+10	; 0x0a
    13b6:	20 e0       	ldi	r18, 0x00	; 0
    13b8:	30 e0       	ldi	r19, 0x00	; 0
    13ba:	40 e8       	ldi	r20, 0x80	; 128
    13bc:	5f e3       	ldi	r21, 0x3F	; 63
    13be:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    13c2:	88 23       	and	r24, r24
    13c4:	2c f4       	brge	.+10     	; 0x13d0 <main+0x89a>
		__ticks = 1;
    13c6:	81 e0       	ldi	r24, 0x01	; 1
    13c8:	90 e0       	ldi	r25, 0x00	; 0
    13ca:	9e 83       	std	Y+6, r25	; 0x06
    13cc:	8d 83       	std	Y+5, r24	; 0x05
    13ce:	3f c0       	rjmp	.+126    	; 0x144e <main+0x918>
	else if (__tmp > 65535)
    13d0:	6f 81       	ldd	r22, Y+7	; 0x07
    13d2:	78 85       	ldd	r23, Y+8	; 0x08
    13d4:	89 85       	ldd	r24, Y+9	; 0x09
    13d6:	9a 85       	ldd	r25, Y+10	; 0x0a
    13d8:	20 e0       	ldi	r18, 0x00	; 0
    13da:	3f ef       	ldi	r19, 0xFF	; 255
    13dc:	4f e7       	ldi	r20, 0x7F	; 127
    13de:	57 e4       	ldi	r21, 0x47	; 71
    13e0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    13e4:	18 16       	cp	r1, r24
    13e6:	4c f5       	brge	.+82     	; 0x143a <main+0x904>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13e8:	6b 85       	ldd	r22, Y+11	; 0x0b
    13ea:	7c 85       	ldd	r23, Y+12	; 0x0c
    13ec:	8d 85       	ldd	r24, Y+13	; 0x0d
    13ee:	9e 85       	ldd	r25, Y+14	; 0x0e
    13f0:	20 e0       	ldi	r18, 0x00	; 0
    13f2:	30 e0       	ldi	r19, 0x00	; 0
    13f4:	40 e2       	ldi	r20, 0x20	; 32
    13f6:	51 e4       	ldi	r21, 0x41	; 65
    13f8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13fc:	dc 01       	movw	r26, r24
    13fe:	cb 01       	movw	r24, r22
    1400:	bc 01       	movw	r22, r24
    1402:	cd 01       	movw	r24, r26
    1404:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1408:	dc 01       	movw	r26, r24
    140a:	cb 01       	movw	r24, r22
    140c:	9e 83       	std	Y+6, r25	; 0x06
    140e:	8d 83       	std	Y+5, r24	; 0x05
    1410:	0f c0       	rjmp	.+30     	; 0x1430 <main+0x8fa>
    1412:	88 ec       	ldi	r24, 0xC8	; 200
    1414:	90 e0       	ldi	r25, 0x00	; 0
    1416:	9c 83       	std	Y+4, r25	; 0x04
    1418:	8b 83       	std	Y+3, r24	; 0x03
    141a:	8b 81       	ldd	r24, Y+3	; 0x03
    141c:	9c 81       	ldd	r25, Y+4	; 0x04
    141e:	01 97       	sbiw	r24, 0x01	; 1
    1420:	f1 f7       	brne	.-4      	; 0x141e <main+0x8e8>
    1422:	9c 83       	std	Y+4, r25	; 0x04
    1424:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1426:	8d 81       	ldd	r24, Y+5	; 0x05
    1428:	9e 81       	ldd	r25, Y+6	; 0x06
    142a:	01 97       	sbiw	r24, 0x01	; 1
    142c:	9e 83       	std	Y+6, r25	; 0x06
    142e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1430:	8d 81       	ldd	r24, Y+5	; 0x05
    1432:	9e 81       	ldd	r25, Y+6	; 0x06
    1434:	00 97       	sbiw	r24, 0x00	; 0
    1436:	69 f7       	brne	.-38     	; 0x1412 <main+0x8dc>
    1438:	92 cb       	rjmp	.-2268   	; 0xb5e <main+0x28>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    143a:	6f 81       	ldd	r22, Y+7	; 0x07
    143c:	78 85       	ldd	r23, Y+8	; 0x08
    143e:	89 85       	ldd	r24, Y+9	; 0x09
    1440:	9a 85       	ldd	r25, Y+10	; 0x0a
    1442:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1446:	dc 01       	movw	r26, r24
    1448:	cb 01       	movw	r24, r22
    144a:	9e 83       	std	Y+6, r25	; 0x06
    144c:	8d 83       	std	Y+5, r24	; 0x05
    144e:	8d 81       	ldd	r24, Y+5	; 0x05
    1450:	9e 81       	ldd	r25, Y+6	; 0x06
    1452:	9a 83       	std	Y+2, r25	; 0x02
    1454:	89 83       	std	Y+1, r24	; 0x01
    1456:	89 81       	ldd	r24, Y+1	; 0x01
    1458:	9a 81       	ldd	r25, Y+2	; 0x02
    145a:	01 97       	sbiw	r24, 0x01	; 1
    145c:	f1 f7       	brne	.-4      	; 0x145a <main+0x924>
    145e:	9a 83       	std	Y+2, r25	; 0x02
    1460:	89 83       	std	Y+1, r24	; 0x01
    1462:	7d cb       	rjmp	.-2310   	; 0xb5e <main+0x28>

00001464 <__prologue_saves__>:
    1464:	2f 92       	push	r2
    1466:	3f 92       	push	r3
    1468:	4f 92       	push	r4
    146a:	5f 92       	push	r5
    146c:	6f 92       	push	r6
    146e:	7f 92       	push	r7
    1470:	8f 92       	push	r8
    1472:	9f 92       	push	r9
    1474:	af 92       	push	r10
    1476:	bf 92       	push	r11
    1478:	cf 92       	push	r12
    147a:	df 92       	push	r13
    147c:	ef 92       	push	r14
    147e:	ff 92       	push	r15
    1480:	0f 93       	push	r16
    1482:	1f 93       	push	r17
    1484:	cf 93       	push	r28
    1486:	df 93       	push	r29
    1488:	cd b7       	in	r28, 0x3d	; 61
    148a:	de b7       	in	r29, 0x3e	; 62
    148c:	ca 1b       	sub	r28, r26
    148e:	db 0b       	sbc	r29, r27
    1490:	0f b6       	in	r0, 0x3f	; 63
    1492:	f8 94       	cli
    1494:	de bf       	out	0x3e, r29	; 62
    1496:	0f be       	out	0x3f, r0	; 63
    1498:	cd bf       	out	0x3d, r28	; 61
    149a:	09 94       	ijmp

0000149c <__epilogue_restores__>:
    149c:	2a 88       	ldd	r2, Y+18	; 0x12
    149e:	39 88       	ldd	r3, Y+17	; 0x11
    14a0:	48 88       	ldd	r4, Y+16	; 0x10
    14a2:	5f 84       	ldd	r5, Y+15	; 0x0f
    14a4:	6e 84       	ldd	r6, Y+14	; 0x0e
    14a6:	7d 84       	ldd	r7, Y+13	; 0x0d
    14a8:	8c 84       	ldd	r8, Y+12	; 0x0c
    14aa:	9b 84       	ldd	r9, Y+11	; 0x0b
    14ac:	aa 84       	ldd	r10, Y+10	; 0x0a
    14ae:	b9 84       	ldd	r11, Y+9	; 0x09
    14b0:	c8 84       	ldd	r12, Y+8	; 0x08
    14b2:	df 80       	ldd	r13, Y+7	; 0x07
    14b4:	ee 80       	ldd	r14, Y+6	; 0x06
    14b6:	fd 80       	ldd	r15, Y+5	; 0x05
    14b8:	0c 81       	ldd	r16, Y+4	; 0x04
    14ba:	1b 81       	ldd	r17, Y+3	; 0x03
    14bc:	aa 81       	ldd	r26, Y+2	; 0x02
    14be:	b9 81       	ldd	r27, Y+1	; 0x01
    14c0:	ce 0f       	add	r28, r30
    14c2:	d1 1d       	adc	r29, r1
    14c4:	0f b6       	in	r0, 0x3f	; 63
    14c6:	f8 94       	cli
    14c8:	de bf       	out	0x3e, r29	; 62
    14ca:	0f be       	out	0x3f, r0	; 63
    14cc:	cd bf       	out	0x3d, r28	; 61
    14ce:	ed 01       	movw	r28, r26
    14d0:	08 95       	ret

000014d2 <_exit>:
    14d2:	f8 94       	cli

000014d4 <__stop_program>:
    14d4:	ff cf       	rjmp	.-2      	; 0x14d4 <__stop_program>
